#!/usr/bin/env python
# coding: utf-8

# In[1]:


import numpy as np


# In[2]:


print(dir(np))


# In[3]:


np.sqrt(10)


# In[4]:


np.ceil(3.16)


# In[5]:


np.ceil(np.sum(np.sqrt([5,10,15])))


# In[6]:


np.amin([10,12,67])


# In[7]:


np.amax([45,67,34,6,7,78])


# In[8]:


np.array([5,9,13,45])


# In[10]:


xyz=np.array([5,9,13,45])


# In[11]:


print(xyz)


# In[12]:


type(xyz)


# In[13]:


xyz.dtype


# In[14]:


a=[[1,2,3,],[4,5,6],[7,8,9]]


# In[15]:


print(a)


# In[17]:


a=np.array([[1,2,3,],[4,5,6],[7,8,9]])


# In[18]:


print(a)


# In[21]:


print(a.ndim)


# In[22]:


print(a.size)


# In[23]:


print(a.shape)


# In[24]:


print(type(a))


# In[28]:


np.arange(2,55.5,5)


# In[30]:


np.arange(50,-1,-5)


# In[31]:


np.linspace(34,78,12)


# In[34]:


np.linspace(2.0,3.0,4,retstep=True)


# In[36]:


np.zeros(5)


# In[38]:


np.ones([5,8])


# In[43]:


np.random.seed(23)


# In[44]:


np.random.rand(5,6)


# In[46]:


np.random.randn(4,6)


# In[47]:


np.random.randint(5,20,12)


# In[48]:


from numpy.random import randint as ri


# In[49]:


ri(2,45,(5,9))


# In[50]:


while True:
    OTP=ri(100,10000,1)
    print("OTP generated by system-",OTP)
    user_otp=int(input('Please Enter Your Otp-'))
    if user_otp==OTP:
        print('You Enter right OtP')
        break
    else:
        print('Please enter right OTP')
        continue


# In[53]:


a=ri(23,99,35).reshape(7,5)
print(a)


# In[54]:


print(a.min())


# In[55]:


print(a.max())


# In[56]:


salary=ri(35,99,30)


# In[57]:


print(salary)


# In[59]:


np.where (salary>55)


# In[60]:


salary[np.where (salary>55)]


# In[61]:


np.clip(salary,a_min=45,a_max=80)


# In[62]:


arr=np.arange(7,45)
print(arr)


# In[63]:


arr[15]


# In[64]:


arr[[4,7,9,12]]


# In[65]:


mat=np.array([[1,2,3],[4,5,6],[7,8,9]])
print(mat)


# In[66]:


mat[1][2]


# In[67]:


mat[:,:2]


# In[68]:


mat[1:2,1:2]


# In[69]:


print(mat)


# In[70]:


salary[salary>78]


# In[71]:


marks=55
np.where(marks>70,'pass','fail')


# In[74]:


marks=55
np.where(marks>70,'fail','pass')


# In[78]:


a=ri(-22,56,34)


# In[79]:


print(a)


# In[80]:


np.count_nonzero(a)


# In[81]:


mat.ravel()


# In[82]:


mat.flatten()


# In[ ]:




